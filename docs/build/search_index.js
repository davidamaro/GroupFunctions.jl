var documenterSearchIndex = {"docs":
[{"location":"#GroupFunctions.jl-Documentation","page":"GroupFunctions.jl Documentation","title":"GroupFunctions.jl Documentation","text":"","category":"section"},{"location":"","page":"GroupFunctions.jl Documentation","title":"GroupFunctions.jl Documentation","text":"","category":"page"},{"location":"#Functions","page":"GroupFunctions.jl Documentation","title":"Functions","text":"","category":"section"},{"location":"","page":"GroupFunctions.jl Documentation","title":"GroupFunctions.jl Documentation","text":"    group_function","category":"page"},{"location":"#GroupFunctions.group_function","page":"GroupFunctions.jl Documentation","title":"GroupFunctions.group_function","text":"group_function(λ::Irrep, tu::YTableau, tv::YTableau)\n\nReturn the symbolic group function corresponding to irrep λ and semistandard  Young Tableaux (STYT) tu and tv.\n\nExamples:\n\njulia> t = YoungTableau([2,1]); fill!(t, [1,2,3]);\njulia> group_function([2,1,0], t, t)\n\ngroup_function(λ::Irrep, tu::GTPattern, tv::GTPattern)\n\nReturn the symbolic group function corresponding to irrep λ and GT patterns tu and tv.\n\nExamples:\n\njulia> t = GTPattern([[2,1,0],[2,1],[2]],[2]);\njulia> group_function([2,1,0], t, t)\n\ngroup_function(λ::Irrep, tu::GTPattern, tv::GTPattern, mat::Array{Complex{Float64},2})\n\nReturn the numeric group function, for an SU(n) member mat, corresponding to irrep λ and STYT tu and tv.\n\nExamples:\n\njulia> using RandomMatrices\njulia> mat = rand(Haar(2),3)\njulia> t = YoungTableau([2,1]); fill!(t, [1,2,3]);\njulia> group_function([2,1,0], t, t, mat)\n\ngroup_function(λ::Irrep, tu::GTPattern, tv::GTPattern, mat::Array{Complex{Float64},2})\n\nReturn the numeric group function, for an SU(n) member mat, corresponding to irrep λ and GT patterns tu and tv.\n\nExamples:\n\njulia> using RandomMatrices\njulia> mat = rand(Haar(2),3)\njulia> t = GTPattern([[2,1,0],[2,1],[2]],[2]);\njulia> group_function([2,1,0], t, t, mat)\n\n\n\n","category":"function"},{"location":"","page":"GroupFunctions.jl Documentation","title":"GroupFunctions.jl Documentation","text":"    mma_to_julia","category":"page"},{"location":"#GroupFunctions.mma_to_julia","page":"GroupFunctions.jl Documentation","title":"GroupFunctions.mma_to_julia","text":"mma_to_julia(s::String)\n\nCalcula el polinomio de MMA a uno de Julia usando SymEngine\n\nExamples:\n\njulia > mma_to_julia(\"x[1, 1])\nu_1_1\n\n\n\n","category":"function"}]
}
